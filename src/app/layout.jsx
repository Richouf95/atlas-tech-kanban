"use client";

import React, { useEffect } from "react";
import { Inter } from "next/font/google";
import "./globals.css";
import { Provider, useSelector, useDispatch } from "react-redux";
import store from "@/store/store";

const inter = Inter({ subsets: ["latin"] });

const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const setInitialTheme = `
(function() {
  const savedTheme = localStorage.getItem('theme') || 'light';
  document.documentElement.className = savedTheme;
})();
`;

function ThemeWrapper({ children }) {
  const theme = useSelector((state) => state.theme.theme);
  const dispatch = useDispatch();

  useEffect(() => {
    const savedTheme =
      typeof window !== "undefined" ? localStorage.getItem("theme") : "light";
    if (savedTheme) {
      dispatch({ type: "theme/set", payload: savedTheme });
    }
  }, [dispatch]);

  return (
    <html lang="en" dir="ltr" className={theme}>
      <head>
        <script dangerouslySetInnerHTML={{ __html: setInitialTheme }} />
      </head>
      <body>{children}</body>
    </html>
  );
}

export default function RootLayout({ children }) {
  return (
    <Provider store={store}>
      <ThemeWrapper>{children}</ThemeWrapper>
    </Provider>
  );
}
